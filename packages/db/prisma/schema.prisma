// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @unique @default(cuid())
  userName  String   @unique
  password  String // Changed `Password` to `password` for consistency and removed nullable option
  email     String   @unique
  myStreams Stream[] @relation("CreatedStreams") // Updated relation name for clarity
  coStreams Stream[] @relation("CoHostedStreams") // Updated relation name for clarity
  role      Role     @default(USER)
  createdAt DateTime @default(now()) // Added timestamps
  updatedAt DateTime @updatedAt
}

model Stream {
  id          String    @id @unique @default(cuid())
  streamTitle String
  description String?
  startTime   DateTime?
  endTime     DateTime?
  status      Status    @default(UPCOMING)
  creatorId   String
  creator     User      @relation("CreatedStreams", fields: [creatorId], references: [id])
  coHosts     User[]    @relation("CoHostedStreams") // Renamed `coCreatorId` to `coHosts` for clarity
  thumbnail   String?
  slides      Json?
  videoLink   String?
  createdAt   DateTime  @default(now()) // Added timestamps
  updatedAt   DateTime  @updatedAt
}

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}

enum Status {
  UPCOMING
  RUNNING
  COMPLETED
}
